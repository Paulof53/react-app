{"ast":null,"code":"import { useState } from \"react\";\nimport axios from \"axios\";\nimport useDebouncedPromise from 'Components/utils/useDebouncedPromise';\nconst initialRequestInfo = {\n  error: null,\n  data: null,\n  loading: false\n};\nexport default function useApi(config) {\n  const [requestInfo, setRequestInfo] = useState(initialRequestInfo);\n  const debouncedAxios = useDebouncedPromise(axios, config.debouceDelay);\n\n  async function call(localconfig) {\n    setRequestInfo({ ...initialRequestInfo,\n      loading: true\n    });\n    let response = null;\n    const finalconfig = {\n      baseUrl: \"http://localhost:5000\",\n      ...config,\n      ...localconfig\n    };\n    const fn = finalconfig.debounced ? debouncedAxios : axios;\n\n    try {\n      response = await fn(finalconfig);\n      setRequestInfo({ ...initialRequestInfo,\n        data: response.data\n      });\n    } catch (error) {\n      setRequestInfo({ ...initialRequestInfo,\n        error\n      });\n    }\n\n    if (config.onCompleted) {\n      config.onCompleted(response);\n    }\n\n    return response;\n  }\n\n  return [call, requestInfo];\n}","map":{"version":3,"sources":["C:/Users/paulo/Documents/GitHub/react-app/web/src/Components/utils/useApi.js"],"names":["useState","axios","useDebouncedPromise","initialRequestInfo","error","data","loading","useApi","config","requestInfo","setRequestInfo","debouncedAxios","debouceDelay","call","localconfig","response","finalconfig","baseUrl","fn","debounced","onCompleted"],"mappings":"AAAA,SACEA,QADF,QAEO,OAFP;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,KAAK,EAAE,IADkB;AAEzBC,EAAAA,IAAI,EAAE,IAFmB;AAGzBC,EAAAA,OAAO,EAAE;AAHgB,CAA3B;AAMA,eAAe,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACrC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACG,kBAAD,CAA9C;AACA,QAAMQ,cAAc,GAAGT,mBAAmB,CAACD,KAAD,EAAQO,MAAM,CAACI,YAAf,CAA1C;;AAEA,iBAAeC,IAAf,CAAoBC,WAApB,EAAiC;AAC/BJ,IAAAA,cAAc,CAAC,EACb,GAAGP,kBADU;AAEbG,MAAAA,OAAO,EAAE;AAFI,KAAD,CAAd;AAIA,QAAIS,QAAQ,GAAG,IAAf;AAEA,UAAMC,WAAW,GAAG;AAClBC,MAAAA,OAAO,EAAE,uBADS;AAEhB,SAAGT,MAFa;AAGhB,SAAGM;AAHa,KAApB;AAMA,UAAMI,EAAE,GAAGF,WAAW,CAACG,SAAZ,GAAwBR,cAAxB,GAAyCV,KAApD;;AAGA,QAAI;AACFc,MAAAA,QAAQ,GAAG,MAAMG,EAAE,CAACF,WAAD,CAAnB;AACAN,MAAAA,cAAc,CAAC,EACb,GAAGP,kBADU;AAEbE,QAAAA,IAAI,EAAEU,QAAQ,CAACV;AAFF,OAAD,CAAd;AAID,KAND,CAME,OAAOD,KAAP,EAAc;AACdM,MAAAA,cAAc,CAAC,EACb,GAAGP,kBADU;AAEbC,QAAAA;AAFa,OAAD,CAAd;AAID;;AAED,QAAII,MAAM,CAACY,WAAX,EAAwB;AACtBZ,MAAAA,MAAM,CAACY,WAAP,CAAmBL,QAAnB;AACD;;AACD,WAAOA,QAAP;AACD;;AAED,SAAO,CAACF,IAAD,EAAOJ,WAAP,CAAP;AAED","sourcesContent":["import {\r\n  useState\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport useDebouncedPromise from 'Components/utils/useDebouncedPromise';\r\n\r\nconst initialRequestInfo = {\r\n  error: null,\r\n  data: null,\r\n  loading: false\r\n};\r\n\r\nexport default function useApi(config) {\r\n  const [requestInfo, setRequestInfo] = useState(initialRequestInfo);\r\n  const debouncedAxios = useDebouncedPromise(axios, config.debouceDelay);\r\n\r\n  async function call(localconfig) {\r\n    setRequestInfo({\r\n      ...initialRequestInfo,\r\n      loading: true\r\n    });\r\n    let response = null;\r\n\r\n    const finalconfig = {\r\n      baseUrl: \"http://localhost:5000\",\r\n        ...config,\r\n        ...localconfig,\r\n    };\r\n\r\n    const fn = finalconfig.debounced ? debouncedAxios : axios;\r\n    \r\n    \r\n    try {\r\n      response = await fn(finalconfig);\r\n      setRequestInfo({\r\n        ...initialRequestInfo,\r\n        data: response.data\r\n      });\r\n    } catch (error) {\r\n      setRequestInfo({\r\n        ...initialRequestInfo,\r\n        error\r\n      });\r\n    }\r\n\r\n    if (config.onCompleted) {\r\n      config.onCompleted(response);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  return [call, requestInfo];\r\n\r\n}"]},"metadata":{},"sourceType":"module"}