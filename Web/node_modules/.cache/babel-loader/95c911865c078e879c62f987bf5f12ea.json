{"ast":null,"code":"import { useState } from \"react\";\nimport axios from \"axios\";\nconst initialRequestInfo = {\n  error: null,\n  data: null,\n  loading: false\n};\nexport default function useApi(config) {\n  const [requestInfo, setRequestInfo] = useState(initialRequestInfo);\n\n  async function call() {\n    setRequestInfo({ ...initialRequestInfo,\n      loading: true\n    });\n    const response = await axios(config);\n    setRequestInfo({ ...initialRequestInfo,\n      data: response.data\n    });\n\n    if (config.onCompleted) {\n      config.onCompleted(response);\n    }\n  }\n\n  return [call, requestInfo];\n}","map":{"version":3,"sources":["C:/Users/paulo/Documents/GitHub/react-app/web/src/Components/utils/useApi.js"],"names":["useState","axios","initialRequestInfo","error","data","loading","useApi","config","requestInfo","setRequestInfo","call","response","onCompleted"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,KAAK,EAAE,IADkB;AAEzBC,EAAAA,IAAI,EAAE,IAFmB;AAGzBC,EAAAA,OAAO,EAAE;AAHgB,CAA3B;AAMA,eAAe,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACrC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAACE,kBAAD,CAA9C;;AAEA,iBAAeQ,IAAf,GAAsB;AACpBD,IAAAA,cAAc,CAAC,EACb,GAAGP,kBADU;AAEbG,MAAAA,OAAO,EAAE;AAFI,KAAD,CAAd;AAKA,UAAMM,QAAQ,GAAG,MAAMV,KAAK,CAACM,MAAD,CAA5B;AAEAE,IAAAA,cAAc,CAAC,EACb,GAAGP,kBADU;AAEbE,MAAAA,IAAI,EAAEO,QAAQ,CAACP;AAFF,KAAD,CAAd;;AAIA,QAAIG,MAAM,CAACK,WAAX,EAAwB;AACtBL,MAAAA,MAAM,CAACK,WAAP,CAAmBD,QAAnB;AACD;AACF;;AAED,SAAO,CAACD,IAAD,EAAOF,WAAP,CAAP;AACD","sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst initialRequestInfo = {\r\n  error: null,\r\n  data: null,\r\n  loading: false,\r\n};\r\n\r\nexport default function useApi(config) {\r\n  const [requestInfo, setRequestInfo] = useState(initialRequestInfo);\r\n\r\n  async function call() {\r\n    setRequestInfo({\r\n      ...initialRequestInfo,\r\n      loading: true,\r\n    });\r\n\r\n    const response = await axios(config);\r\n\r\n    setRequestInfo({\r\n      ...initialRequestInfo,\r\n      data: response.data,\r\n    });\r\n    if (config.onCompleted) {\r\n      config.onCompleted(response);\r\n    }\r\n  }\r\n\r\n  return [call, requestInfo];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}